name: Python Tests

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coverage

    - name: Run tests with coverage
      run: |
        coverage run -m unittest discover -s tests -p '*_test.py'

    - name: Generate coverage report
      run: |
        coverage report
        coverage html

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          coverage-report.xml
          htmlcov/

    - name: Notify status
      uses: actions/github-script@v6
      if: always()
      with:
        script: |
          const { data: commit } = await github.rest.repos.getCommit({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: context.sha
          });
          
          const status = '${{ job.status }}' === 'success' ? 'Success' : 'Failed';
          const message = `Tests ${status} for ${commit.commit.message}`;
          
          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: message
          });
